sudo: required
language: android
jdk: oraclejdk8

env:
  global:
  - ANDROID_API_LEVEL=28
  - ANDROID_BUILD_TOOLS_VERSION=28.0.3
  - ADB_INSTALL_TIMEOUT=20
  - secure: WdAlW1LoOdCndZP2AnlYAH6PG/IVIj9H4YXxWsIPqoSwwc4WGshEJBV+BWiGOZh6k9GJdJl49GBodXW5XiFfarenurI26m0BuSPzFcgQRmV/fLN242Z2T+HKJGtNVFMZIEs+ePaAgiBV/YWAVkTlXlzbULjXGRjNpagW5Dy35Ye/r2R3B4WLlufQHmHyCIdjmTyBag2FoSvVmhYv2Uea0ERIuHeSHYjIk7tY3d5qshOCkjzUdcI/Dozd+DAX66+EVq5a3I9Xlyet6Fc598xF+iN3Rw2yz8pWOrQkZAmBR+Gi/ZaYWGeKg6tytsuV0LwtuoT0xnzwIJeYT9k+K0GzK1BRHXIk0aDwMYnwjGmMsKIiNZ8T55Yp/Dayi5MyZx3IrJ1UAne8gRxbeZRDOVx3IUmJiAmBewcmtTdVStkBfYukyHaYIorqCjP9VupB1PD7cFHkWyuiRrMtTpFi2cgzf97P4LkoT8ZY19cjoVw5KCGaKrST7u0+XS9bfZhF7C1j5eMaoVpp5OC2/80zMhlmzl3oBgRWmLONS6jVR3kjqzFgAQjdB2JnuTkCawsuSKBzMtTMZCUPy7jaxGpFNU5jUYc/VO80o09fEOwtgoPGPWGh+2QHSMx3lA/U+83oT3/K4Ldsnhq3MjTQtYKoCLiwhZT9Jb8Qp5vvLGJtX3Dlyo8=

matrix:
  include:
  - name: "Android 22"
    env:
    - EMULATOR_API_LEVEL=22
    - ANDROID_ABI=armeabi-v7a
    - ANDROID_ABI_ADDON=";default;armeabi-v7a"
    - ANDROID_EMULATOR_IMAGE=sys-img-armeabi-v7a-android-22

android:
  components:
  - tools # to get the new `repository-11.xml`
  - tools # https://github.com/travis-ci/travis-ci/issues/6040#issuecomment-219367943)
  - platform-tools
  - build-tools-$ANDROID_BUILD_TOOLS_VERSION
  - extra-android-support
  - extra-google-m2repository
  - extra-android-m2repository
  - android-$ANDROID_API_LEVEL
  - android-$EMULATOR_API_LEVEL
  - $ANDROID_EMULATOR_IMAGE
  licenses:
  - android-sdk-preview-license-.+
  - android-sdk-license-.+
  - google-gdk-license-.+
  - '.+'

before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"
  - "$HOME/google-cloud-sdk/"

before_install:
- touch ~/.android/repositories.cfg
- sdkmanager --list || true
- yes | sdkmanager "tools"
- yes | sdkmanager "platform-tools"
- yes | sdkmanager "build-tools;$ANDROID_BUILD_TOOLS_VERSION"
- yes | sdkmanager "platforms;android-$ANDROID_API_LEVEL"
- yes | sdkmanager "extras;android;m2repository"
- yes | sdkmanager "extras;google;m2repository"
- yes | sdkmanager --update
- yes | sdkmanager --licenses
- sdkmanager --list || true
- bundle install

install:
- bundle exec fastlane unit_tests

before_script:
- sdkmanager "system-images;android-$EMULATOR_API_LEVEL$ANDROID_ABI_ADDON"
- echo no | avdmanager -v create avd -f -n test -k "system-images;android-$EMULATOR_API_LEVEL$ANDROID_ABI_ADDON"
- $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -skin 768x1280 &
- android-wait-for-emulator
- adb shell setprop ro.test_harness true &
- adb shell am broadcast -a android.intent.action.CLOSE_SYSTEM_DIALOGS &
- adb shell settings put global window_animation_scale 0 &
- adb shell settings put global transition_animation_scale 0 &
- adb shell settings put global animator_duration_scale 0 &
- adb shell input keyevent 82 &
- adb shell input keyevent 1 &

script:
- bundle exec fastlane all_tests

after_success:
- bash <(curl -s https://codecov.io/bash)

after_failure:
- chmod +x ci/upload_screenshots.sh
- mkdir io.github.t3r1jj.pbmap.sample.integration
- adb logcat -d > io.github.t3r1jj.pbmap.sample.integration/logcat.log
- adb pull /storage/emulated/0/test_screenshots/io.github.t3r1jj.pbmap.sample.integration &&
  bash ci/upload_screenshots.sh $DROPBOX_KEY io.github.t3r1jj.pbmap.sample.integration

before_deploy:
- chmod +x ci/run_firebase_tests.sh
- gcloud version || true
- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export $CLOUDSDK_CORE_DISABLE_PROMPTS; curl https://sdk.cloud.google.com | bash; fi
- source /home/travis/google-cloud-sdk/path.bash.inc
- gcloud version
- gcloud components update
- echo $GCLOUD_SERVICE_KEY | base64 --decode -i > $HOME/gcloud-service-key.json
- gcloud config set project $GOOGLE_PROJECT_ID
- gcloud auth activate-service-account --key-file=$HOME/gcloud-service-key.json --project=$GOOGLE_PROJECT_ID
- bundle exec fastlane deploy_tests

deploy:
  provider: script
  script: >-
    echo $GOOGLE_PLAY_KEY | base64 --decode -i > gplay_key.json &&
    bundle exec fastlane supply init &&
    chmod +x ci/download_ci_data.sh &&
    bash ci/download_ci_data.sh $DROPBOX_KEY $SIGNING_ARCHIVE_NAME &&
    bundle exec fastlane deploy_internal
